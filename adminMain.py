# Form implementation generated from reading ui file '__standardMainWindow.ui'
#
# Created by: PyQt6 UI code generator 6.4.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.

from PyQt6 import QtCore, QtGui, QtWidgets, QtSql
from PyQt6.QtCore import Qt
from PyQt6.QtGui import QCursor, QPixmap, QIcon, QColor
from PyQt6.QtSql import QSqlQuery, QSqlTableModel
from PyQt6.QtWidgets import QGraphicsDropShadowEffect
from PyQt6.QtWidgets  import QAbstractItemView

import item_delegate


class adminMain(QtWidgets.QMainWindow):
    def __init__(self):
        super(adminMain, self).__init__()
        self.id = id
        db = QtSql.QSqlDatabase.addDatabase('QMYSQL')
        q = "soft"
        db.setDatabaseName(q)
        db.setUserName('root')
        db.setPassword('root')
        db.setPort(3306)
        db.open()
        self.db = db
        self.setupUi()
        self.slot_leftButton1()
        self.tableView.show()

        self.show()

    def setupUi(self):
        self.setObjectName("Form")
        self.resize(1174, 712)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Fixed, QtWidgets.QSizePolicy.Policy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.sizePolicy().hasHeightForWidth())
        self.setSizePolicy(sizePolicy)
        # 设置窗口无边框和阴影
        self.setWindowFlag(Qt.WindowType.FramelessWindowHint)
        self.setAttribute(Qt.WidgetAttribute.WA_TranslucentBackground)
        effect = QGraphicsDropShadowEffect()
        effect.setOffset(4, 4)
        effect.setColor(QColor(0, 0, 0, 50))
        effect.setBlurRadius(10)
        self.setGraphicsEffect(effect)

        self.leftFream = QtWidgets.QFrame(self)
        self.leftFream.setGeometry(QtCore.QRect(10, 10, 80, 715))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Fixed, QtWidgets.QSizePolicy.Policy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.leftFream.sizePolicy().hasHeightForWidth())
        self.leftFream.setSizePolicy(sizePolicy)
        self.leftFream.setStyleSheet("background-color: rgb(0, 24, 102);\n"
"border-top-left-radius:10px;\n"
"border-bottom-left-radius:10px;")
        self.leftFream.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.leftFream.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.leftFream.setObjectName("leftFream")
        self.headLable = QtWidgets.QLabel(self.leftFream)
        self.headLable.setGeometry(QtCore.QRect(0, 40, 80, 80))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Fixed, QtWidgets.QSizePolicy.Policy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.headLable.sizePolicy().hasHeightForWidth())
        self.headLable.setSizePolicy(sizePolicy)
        self.headLable.setText("")
        self.headLable.setObjectName("headLable")
        self.leftButton1 = QtWidgets.QPushButton(self.leftFream)
        self.leftButton1.setGeometry(QtCore.QRect(0, 240, 80, 60))
        self.leftButton1.setStyleSheet("color: rgb(233,236,239);\n"
"font: 12pt \"微软雅黑\";\n"
"border-top-left-radius:0px;\n"
"border-bottom-left-radius:0px;")
        self.leftButton1.setObjectName("leftButton1")
        self.leftButton2 = QtWidgets.QPushButton(self.leftFream)
        self.leftButton2.setGeometry(QtCore.QRect(0, 300, 80, 60))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Fixed, QtWidgets.QSizePolicy.Policy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.leftButton2.sizePolicy().hasHeightForWidth())
        self.leftButton2.setSizePolicy(sizePolicy)
        self.leftButton2.setStyleSheet("color: rgb(233,236,239);\n"
"font: 12pt \"微软雅黑\";\n"
"border-top-left-radius:0px;\n"
"border-bottom-left-radius:0px;")
        self.leftButton2.setObjectName("leftButton2")
        self.leftButton3 = QtWidgets.QPushButton(self.leftFream)
        self.leftButton3.setGeometry(QtCore.QRect(0, 360, 80, 60))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Fixed, QtWidgets.QSizePolicy.Policy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.leftButton3.sizePolicy().hasHeightForWidth())
        self.leftButton3.setSizePolicy(sizePolicy)
        self.leftButton3.setStyleSheet("color: rgb(233,236,239);\n"
"font: 12pt \"微软雅黑\";\n"
"border-top-left-radius:0px;\n"
"border-bottom-left-radius:0px;")
        self.leftButton3.setObjectName("leftButton3")
        self.leftButton4 = QtWidgets.QPushButton(self.leftFream)
        self.leftButton4.setGeometry(QtCore.QRect(0, 420, 80, 60))
        self.leftButton4.setStyleSheet("color: rgb(233,236,239);\n"
"font: 12pt \"微软雅黑\";\n"
"border-top-left-radius:0px;\n"
"border-bottom-left-radius:0px;")
        self.leftButton4.setObjectName("leftButton4")
        self.leftButton5 = QtWidgets.QPushButton(self.leftFream)
        self.leftButton5.setGeometry(QtCore.QRect(0, 480, 80, 60))
        self.leftButton5.setStyleSheet("color: rgb(233,236,239);\n"
"font: 12pt \"微软雅黑\";\n"
"border-top-left-radius:0px;\n"
"border-bottom-left-radius:0px;")
        self.leftButton5.setObjectName("leftButton5")
        self.topFream = QtWidgets.QFrame(self)
        self.topFream.setGeometry(QtCore.QRect(90, 10, 1074, 40))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Fixed, QtWidgets.QSizePolicy.Policy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.topFream.sizePolicy().hasHeightForWidth())
        self.topFream.setSizePolicy(sizePolicy)
        self.topFream.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"border-top-right-radius:10px;\n"
"")
        self.topFream.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.topFream.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.topFream.setObjectName("topFream")
        self.lineButton = QtWidgets.QPushButton(self.topFream)
        self.lineButton.setGeometry(QtCore.QRect(984, 0, 40, 40))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Fixed, QtWidgets.QSizePolicy.Policy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.lineButton.sizePolicy().hasHeightForWidth())
        self.lineButton.setSizePolicy(sizePolicy)
        self.lineButton.setText("")
        self.lineButton.setObjectName("lineButton")
        self.closeButton = QtWidgets.QPushButton(self.topFream)
        self.closeButton.setGeometry(QtCore.QRect(1024, 0, 40, 40))
        self.closeButton.setText("")
        self.closeButton.setObjectName("closeButton")
        self.closeButton.raise_()
        self.lineButton.raise_()
        self.midFream = QtWidgets.QFrame(self)
        self.midFream.setGeometry(QtCore.QRect(90, 50, 1074, 80))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Fixed, QtWidgets.QSizePolicy.Policy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.midFream.sizePolicy().hasHeightForWidth())
        self.midFream.setSizePolicy(sizePolicy)
        self.midFream.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"")
        self.midFream.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.midFream.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.midFream.setObjectName("midFream")
        self.midlabel = QtWidgets.QLabel(self.midFream)
        self.midlabel.setGeometry(QtCore.QRect(50, 20, 181, 41))
        self.midlabel.setStyleSheet("font: 700 25pt \"微软雅黑\";")
        self.midlabel.setObjectName("midlabel")
        self.lineEdit = QtWidgets.QLineEdit(self.midFream)
        self.lineEdit.setGeometry(QtCore.QRect(750, 30, 300, 40))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Fixed, QtWidgets.QSizePolicy.Policy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.lineEdit.sizePolicy().hasHeightForWidth())
        self.lineEdit.setSizePolicy(sizePolicy)
        self.lineEdit.setContextMenuPolicy(QtCore.Qt.ContextMenuPolicy.PreventContextMenu)
        self.lineEdit.setStyleSheet("background-color: rgb(233, 236, 239);\n"
"font: 15pt \"微软雅黑\";\n"
"border:2px;\n"
"border-color: rgb(0,24,102);\n"
"border-radius:20px;\n"
"")
        self.lineEdit.setText("")
        self.lineEdit.setMaxLength(15)
        self.lineEdit.setEchoMode(QtWidgets.QLineEdit.EchoMode.Normal)
        self.lineEdit.setCursorPosition(0)
        self.lineEdit.setObjectName("lineEdit")
        self.screenButton = QtWidgets.QPushButton(self.midFream)
        self.screenButton.setGeometry(QtCore.QRect(510, 40, 40, 40))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Fixed, QtWidgets.QSizePolicy.Policy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.screenButton.sizePolicy().hasHeightForWidth())
        self.screenButton.setSizePolicy(sizePolicy)
        self.screenButton.setFocusPolicy(QtCore.Qt.FocusPolicy.NoFocus)
        self.screenButton.setStyleSheet("background-color: rgba(0, 0, 0, 0);\n"
"selection-background-color: rgb(231,244,255);")
        self.screenButton.setText("")
        self.screenButton.setObjectName("screenButton")
        self.label = QtWidgets.QLabel(self.midFream)
        self.label.setGeometry(QtCore.QRect(520, 30, 161, 31))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Fixed, QtWidgets.QSizePolicy.Policy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label.sizePolicy().hasHeightForWidth())
        self.label.setSizePolicy(sizePolicy)
        self.label.setStyleSheet("\n"
"font: 15pt \"幼圆\";")
        self.label.setObjectName("label")
        self.midlabel.raise_()
        self.lineEdit.raise_()
        self.label.raise_()
        self.screenButton.raise_()
        self.mainFream = QtWidgets.QFrame(self)
        self.mainFream.setGeometry(QtCore.QRect(90, 130, 1074, 595))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Fixed, QtWidgets.QSizePolicy.Policy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.mainFream.sizePolicy().hasHeightForWidth())
        self.mainFream.setSizePolicy(sizePolicy)
        self.mainFream.setStyleSheet("background-color: rgb(233, 236, 239);\n"
"\n"
"border-bottom-right-radius:10px;")
        self.mainFream.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.mainFream.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.mainFream.setObjectName("mainFream")
        self.pushButton = QtWidgets.QPushButton(self.mainFream)
        self.pushButton.setGeometry(QtCore.QRect(0, 0, 0, 0))
        self.pushButton.setText("")
        self.pushButton.setObjectName("pushButton")
        self.tableView = QtWidgets.QTableView(self.mainFream)
        self.tableView.setGeometry(QtCore.QRect(0, 10, 1074, 595))
        self.tableView.setObjectName("tableView")
        # self.tableView_2 = QtWidgets.QTableView(self.mainFream)
        # self.tableView_2.setGeometry(QtCore.QRect(0, 10, 1074, 551))
        # self.tableView_2.setObjectName("tableView_2")


        '''最小化按钮'''
        icon1 = QIcon('admin/icon-line.png')
        self.lineButton.setIcon(icon1)
        self.lineButton.clicked.connect(self.slot_mini_window)#

        '''关闭按钮'''
        icon2 = QIcon('admin/icon-close.png')
        self.closeButton.setIcon(icon2)
        self.closeButton.clicked.connect(self.close)#

        '''头像，不变的。'''
        p1 = QPixmap('admin/head.png')
        self.headLable.setPixmap(p1)

        '''左侧按钮，被点击之后的颜色变化'''
        self.leftButton1.clicked.connect(self.slot_leftButton1)
        self.leftButton2.clicked.connect(self.slot_leftButton2)
        self.leftButton3.clicked.connect(self.slot_leftButton3)
        self.leftButton4.clicked.connect(self.slot_leftButton4)
        self.leftButton5.clicked.connect(self.slot_leftButton5)

        self.mainFream.show()
        self.label.hide()
        self.lineEdit.hide()

        my_delegate = item_delegate.my_item_delegate()
        self.tableView.setItemDelegate(my_delegate)
        self.tableView.setSortingEnabled(True)

        self.retranslateUi()
        QtCore.QMetaObject.connectSlotsByName(self)

    def retranslateUi(self):
        _translate = QtCore.QCoreApplication.translate
        self.setWindowTitle(_translate("Form", "Form"))
        self.leftButton1.setText(_translate("Form", "学生管理"))
        self.leftButton2.setText(_translate("Form", "教师管理"))
        self.leftButton3.setText(_translate("Form", "课表信息"))
        self.leftButton4.setText(_translate("Form", "成绩信息"))
        self.leftButton5.setText(_translate("Form", "转专业"))
        self.midlabel.setText(_translate("Form", "欢迎使用"))
        self.label.setText(_translate("Form", "TextLabel"))




    def mousePressEvent(self, evt):
        '''可以自定义canMove_Flag = True需要满足的条件'''
        '''subWidgetMoveFlag子窗口被点击的瞬间，就被子窗口设置，值为子窗口是否允许拖动'''
        if ( True):
            # canMoveFlag被设置成Ture，标志着一个拖动过程的开始。mouseMoveEvent函数就是用这个去判断是否在拖动。
            self.canMoveFlag = True
            self.window_origin_x = self.x()
            self.window_origin_y = self.y()
            self.mouse_origin_x = QCursor.pos().x()
            self.mouse_origin_y =  QCursor.pos().y()

    def mouseMoveEvent(self, evt):
        '''通过一个if语句的判断，只能在canMoveFlag = True时才可以单击鼠标左键拖动这个widget'''
        if (self.canMoveFlag == True):
            self.mouse_des_x = QCursor.pos().x()
            self.mouse_des_y = QCursor.pos().y()
            self.window_des_x = self.window_origin_x + self.mouse_des_x - self.mouse_origin_x
            self.window_des_y = self.window_origin_y + self.mouse_des_y - self.mouse_origin_y
            self.move(self.window_des_x, self.window_des_y)

    def mouseReleaseEvent(self, evt):
        '''subWidgetMoveFlag在释放的瞬间，被设置成False，意味着一个拖动过程的结束'''
        self.canMoveFlag = False
        self.subWidgetMoveFlag = False

    def slot_mini_window(self):
        self.setWindowState(Qt.WindowState.WindowMinimized)

    def slot_leftButton1(self):
        self.leftButton1.setStyleSheet(
                    "background-color:rgb(28,110,255);color:rgb(255,255,255);font: 12pt \"微软雅黑\";")
        self.leftButton2.setStyleSheet("color: rgb(233,236,239);\n"
"font: 12pt \"微软雅黑\";")
        self.leftButton3.setStyleSheet("color: rgb(233,236,239);\n"
"font: 12pt \"微软雅黑\";")
        self.leftButton4.setStyleSheet("color: rgb(233,236,239);\n"
                                       "font: 12pt \"微软雅黑\";")
        self.leftButton5.setStyleSheet("color: rgb(233,236,239);\n"
                                       "font: 12pt \"微软雅黑\";")
        self.model = QSqlTableModel()
        self.model.setTable('stuinfo')
        self.tableView.setModel(self.model)
        #self.model.setFilter("name='"+self.r2.text()+"'")
        self.model.select()


    def slot_leftButton2(self):
        self.leftButton2.setStyleSheet(
                    "background-color:rgb(28,110,255);color:rgb(255,255,255);font: 12pt \"微软雅黑\";")
        self.leftButton1.setStyleSheet("color: rgb(233,236,239);\n"
                                           "font: 12pt \"微软雅黑\";")
        self.leftButton3.setStyleSheet("color: rgb(233,236,239);\n"
                                           "font: 12pt \"微软雅黑\";")
        self.leftButton4.setStyleSheet("color: rgb(233,236,239);\n"
                                       "font: 12pt \"微软雅黑\";")
        self.leftButton5.setStyleSheet("color: rgb(233,236,239);\n"
                                       "font: 12pt \"微软雅黑\";")

        self.model = QSqlTableModel()
        self.model.setTable('teainfo')
        self.tableView.setModel(self.model)
        #self.model.setFilter("name='"+self.r2.text()+"'")
        self.model.select()

        #self.tableView.setEditTriggers(QAbstractItemView.EditTrigger.NoEditTriggers)


    def slot_leftButton3(self):
        self.leftButton3.setStyleSheet(
                    "background-color:rgb(28,110,255);color:rgb(255,255,255);font: 12pt \"微软雅黑\";")
        self.leftButton2.setStyleSheet("color: rgb(233,236,239);\n"
"font: 12pt \"微软雅黑\";")
        self.leftButton1.setStyleSheet("color: rgb(233,236,239);\n"
"font: 12pt \"微软雅黑\";")
        self.leftButton4.setStyleSheet("color: rgb(233,236,239);\n"
                                       "font: 12pt \"微软雅黑\";")
        self.leftButton5.setStyleSheet("color: rgb(233,236,239);\n"
                                       "font: 12pt \"微软雅黑\";")

        self.model = QSqlTableModel()
        self.model.setTable('courseinfo')
        self.tableView.setModel(self.model)
        #self.model.setFilter("course='"+self.r5.text()+"'")
        self.model.select()
        #self.tableView.setEditTriggers(QAbstractItemView.EditTrigger.NoEditTriggers)


    def slot_leftButton4(self):
        self.leftButton4.setStyleSheet(
                    "background-color:rgb(28,110,255);color:rgb(255,255,255);font: 12pt \"微软雅黑\";")
        self.leftButton2.setStyleSheet("color: rgb(233,236,239);\n"
"font: 12pt \"微软雅黑\";")
        self.leftButton1.setStyleSheet("color: rgb(233,236,239);\n"
"font: 12pt \"微软雅黑\";")
        self.leftButton3.setStyleSheet("color: rgb(233,236,239);\n"
                                       "font: 12pt \"微软雅黑\";")
        self.leftButton5.setStyleSheet("color: rgb(233,236,239);\n"
                                       "font: 12pt \"微软雅黑\";")
        self.tableView.setEditTriggers(QAbstractItemView.EditTrigger.DoubleClicked)
        self.model = QSqlTableModel()
        self.model.setTable('stuscore')
        self.tableView.setModel(self.model)
        #self.model.setFilter("course='"+self.r5.text()+"'")
        self.model.select()

    def slot_leftButton5(self):
        self.leftButton5.setStyleSheet(
                    "background-color:rgb(28,110,255);color:rgb(255,255,255);font: 12pt \"微软雅黑\";")
        self.leftButton2.setStyleSheet("color: rgb(233,236,239);\n"
"font: 12pt \"微软雅黑\";")
        self.leftButton1.setStyleSheet("color: rgb(233,236,239);\n"
"font: 12pt \"微软雅黑\";")
        self.leftButton3.setStyleSheet("color: rgb(233,236,239);\n"
                                       "font: 12pt \"微软雅黑\";")
        self.leftButton4.setStyleSheet("color: rgb(233,236,239);\n"
                                       "font: 12pt \"微软雅黑\";")


        self.tableView.setEditTriggers(QAbstractItemView.EditTrigger.DoubleClicked)
        self.model = QSqlTableModel()
        self.model.setTable('applylog')
        self.tableView.setModel(self.model)
        #self.model.setFilter("course='"+self.r5.text()+"'")
        self.model.select()

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    ui = adminMain()
    sys.exit(app.exec())
